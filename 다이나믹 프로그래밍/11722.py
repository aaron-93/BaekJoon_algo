# 문제
# 수열 A가 주어졌을 때, 가장 긴 감소하는 부분 수열을 구하는 프로그램을 작성하시오.

# 예를 들어, 수열 A = {10, 30, 10, 20, 20, 10} 인 경우에 가장 긴 감소하는 부분 수열은 A = {10, 30, 10, 20, 20, 10}  이고, 길이는 3이다.

# 입력
# 첫째 줄에 수열 A의 크기 N (1 ≤ N ≤ 1,000)이 주어진다.

# 둘째 줄에는 수열 A를 이루고 있는 Ai가 주어진다. (1 ≤ Ai ≤ 1,000)

# 출력
# 첫째 줄에 수열 A의 가장 긴 감소하는 부분 수열의 길이를 출력한다.

n = int(input())

ori_array = list(map(int, input().split()))

dp = [1] * n

for i in range(n):
    for j in range(i):
        if ori_array[i] < ori_array[j]:
            dp[i] = max(dp[i], dp[j] + 1)

print(max(dp))


# dp[i] = max(dp[i], dp[j]+1) 인 이유 : dp[j]의 갯수가 여러개이기 때문
# 예를들어 j0 을 계산한 값이 dp[i]에 저장되는데, j1을 계산한 값이
# 현재 dp[i] 로 저장되어 있는 dp[j0] +1 의 값보다 클 경우, dp[i]에 dp[j1] +1 의 값을 삽입